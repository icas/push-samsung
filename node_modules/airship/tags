!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Airship	lib/airship.js	/^  , Airship;$/;"	c
Airship	lib/index.js	/^var Airship = require('.\/airship').Airship;$/;"	v
Airship.addTag	lib/airship.js	/^, addTag: function (tagName) {$/;"	m
Airship.addTagToDevice	lib/airship.js	/^, addTagToDevice: function (deviceToken, tag) {$/;"	m
Airship.batchPush	lib/airship.js	/^, batchPush: function (payload) {$/;"	m
Airship.broadcast	lib/airship.js	/^, broadcast: function (payload) {$/;"	m
Airship.cancelPush	lib/airship.js	/^, cancelPush: function (idOrArgs) {$/;"	m
Airship.deviceTags	lib/airship.js	/^, deviceTags: function (deviceToken) {$/;"	m
Airship.deviceTokens	lib/airship.js	/^, deviceTokens: function (options) {$/;"	m
Airship.feedback	lib/airship.js	/^, feedback: function (since) {$/;"	m
Airship.inactivate	lib/airship.js	/^, inactivate: function (deviceToken) {$/;"	m
Airship.modifyTokensOnTag	lib/airship.js	/^, modifyTokensOnTag: function (tagName, payload) {$/;"	m
Airship.push	lib/airship.js	/^, push: function (payload) {$/;"	m
Airship.register	lib/airship.js	/^, register: function (deviceToken, payload) {$/;"	m
Airship.removeTag	lib/airship.js	/^, removeTag: function (tagName) {$/;"	m
Airship.removeTagFromDevice	lib/airship.js	/^, removeTagFromDevice: function (deviceToken, tag) {$/;"	m
Airship.request	lib/airship.js	/^Airship.prototype = {$/;"	m
Airship.tags	lib/airship.js	/^, tags: function () {$/;"	m
EXAMPLES	Makefile	/^EXAMPLES = spec\/*_spec.js$/;"	m
Request	lib/request.js	/^util.inherits(Request, events.EventEmitter);$/;"	c
Request	spec/request_spec.js	/^var Request = require('..\/lib\/request').Request$/;"	v
Request.DEFAULTS.hostname	lib/request.js	/^Request.DEFAULTS = { hostname: 'go.urbanairship.com' };$/;"	p
Request.delete	lib/request.js	/^, delete: function () {$/;"	m
Request.get	lib/request.js	/^, get: function () {$/;"	m
Request.get.options.options.Accept	lib/request.js	/^    this.options.headers = { 'Accept': 'application\/json' };$/;"	p
Request.post	lib/request.js	/^, post: function (data) {$/;"	m
Request.put	lib/request.js	/^, put: function (data) {$/;"	m
Request.send	lib/request.js	/^, send: function (data) {$/;"	m
Request.setAuth	lib/request.js	/^Request.prototype = {$/;"	m
as	lib/play.js	/^var as = Airship.new('foo', 'bar');$/;"	v
exports.createAirship	lib/index.js	/^var Airship = require('.\/airship').Airship;$/;"	f
this.options.options.Content-Type	lib/request.js	/^      this.options.headers = { 'Content-Type': 'application\/json' };$/;"	p
u	lib/airship.js	/^var u = require('.\/utils')$/;"	v
u	lib/request.js	/^var u = require('.\/utils')$/;"	v
uas	spec/index_spec.js	/^var uas = require('..\/lib\/index')$/;"	v
utils	lib/utils.js	/^var utils = exports;$/;"	v
utils	spec/utils_spec.js	/^var utils = require('..\/lib\/utils');$/;"	v
utils.compact	lib/utils.js	/^};$/;"	f
utils.deviceTokenPath	lib/utils.js	/^};$/;"	f
utils.deviceTokenTagPath	lib/utils.js	/^};$/;"	f
utils.joinPath	lib/utils.js	/^};$/;"	f
utils.merge	lib/utils.js	/^var utils = exports;$/;"	f
utils.scheduledPushPath	lib/utils.js	/^};$/;"	f
utils.tagPath	lib/utils.js	/^};$/;"	f
