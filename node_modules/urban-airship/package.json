{
  "author": {
    "name": "Christopher John",
    "email": "cojohn@gmail.com"
  },
  "contributors": [
    {
      "name": "Christopher John",
      "email": "cojohn@gmail.com"
    },
    {
      "name": "Dave Winders"
    },
    {
      "name": "Roberto Hidalgo"
    }
  ],
  "name": "urban-airship",
  "description": "Urban Airship API wrapper.",
  "version": "0.3.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/cojohn/node-urban-airship.git"
  },
  "keywords": [
    "Urban Airship",
    "iPhone",
    "iOS",
    "Android",
    "notification",
    "push",
    "api"
  ],
  "license": "MIT",
  "main": "./index",
  "engines": {
    "node": ">= 0.4.10"
  },
  "readme": "#node-urban-airship\n\nSimple wrapper for the Urban Airship API.\n\nHow to use:\n\nnpm install urban-airship\n\nReference the module: require(\"urban-airship\") \n\nAuthenticate with Urban Airship.\n\n\tua = new UA(\"<api key>\", \"<api secret key>\", \"<api master key>\");\n\nUse Node-Urban-Airship.\n\nSample API Calls\n\n1. Register a device\n\n\tua.registerDevice(\"< token >\", function(error) {...});\n\n2. Create payloads for the push notification API needed.\n\n\tInformation available here.\n\thttp://urbanairship.com/docs/push.html\n\n\tPush Notification Examples: \n\n\t\ta)\t\"/api/push/\"\n\n\t\tvar payload0 = {\n\t\t\t\"device_tokens\": [\n\t\t\tThe device or device ids to send the message to\n\t\t\t],\n\t\t\t\"aps\": {\n\t\t\t\t\"alert\": \"Calling Urban Airship!\",\n\t\t\t\t\"badge\": 2\n\t\t\t}\n\t\t};\n\n\t\tua.pushNotification(\"/api/push\", payload0, function(error) {....});\n\n\t\tb) \"/api/push/broadcast/\"\n\n\t\tvar payload1 = {\n\t\t\t\"aps\": {\n\t\t\t\t \"badge\": 15,\n\t\t\t\t \"alert\": \"Calling Urban Airship!\",\n\t\t\t\t \"sound\": \"cat.caf\"\n\t\t\t},\n\t\t\t\"exclude_tokens\": [\n\t\t\t\t\"device token you want to skip\",\n\t\t\t\t\"another device token you want to skip\"\n\t\t\t]\n\t\t};\n\n\t\tua.pushNotification(\"/api/push/broadcast/\", payload1, function(error) {.....});\n\n3. Unregister a device.\n\n\tua.unregisterDevice(\"< token >\", function(error) {....});\n\n\n\n",
  "readmeFilename": "README.md",
  "_id": "urban-airship@0.3.0",
  "dist": {
    "shasum": "c62a46e36cd42cdf39756ac1d6965d54568322fb"
  },
  "_from": "urban-airship@0.3.0"
}
